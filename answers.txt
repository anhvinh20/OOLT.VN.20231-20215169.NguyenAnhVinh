Lab1_221 : Việt và dịch 2 dòng lệnh đầu tiên để làm quen với Java,
           kết quả hiển thị ở Terminal.
Lab1_222 : Chương trình để làm quen với Java in ra màn hình đoạn
           Message thông báo.
Lab1_223 : Chương trình để làm quen với String, sau đó xuất ra màn hình
           đoạn Message thông báo.
Lab1_224 : Chương trình yêu cầu ta nhập vào các số và xuất ra màn hình đoạn
           Message thông báo, mục đích cho ta hiểu về cách cộng String.
Lab1_225 : Vẫn yêu cầu nhập vào 2 số như Lab1_224 nhưng output là tổng 2 số,
           hiệu 2 số , thương 2 số.
           - Đầu tiên ta sử dụng num1 = Double.parseDouble(strNum1) để đổi lần lượt
           chuỗi strNum1 thành double num1, thuận lợi cho việc tính toán.
           - Tiếp đó bằng cách sử dụng các toán tử cở bản, và hàm Math.abs để
           tính toán.
           - Xuất ra màn hình trực tiếp ( Tổng, Trị tuyệt đối hiệu, Thương )
Lab1_226 : Mục đích tính toán cơ bản các hàm ( bậc nhất 1 ẩn , hệ pt bậc nhất 2 ẩn,
           phương trình bậc 2 )
           - Tạo các static void cho mỗi hàm :
                 + Hàm bậc nhất 1 ẩn ( dạng ax+b=0 ) first_degree() :
                       Nhập vào double a,b
                       Nếu a=0, cho phép nhập lại bằng cách gọi lại hàm
                       Nếu a#0 thì x = -b/a;
                 + Hệ pt bậc nhất 2 ẩn ( dạng a11.x1 + a12.x2 =b1 và a21.x1 + a22.x2 =b2 ) system_first_degree():
                       Nhập vào double a11,a12,b1 ,a21, a22, b2 , x1,x2
                       Tính 3 định thức D, D1, D2
                       Nếu D#0 --> x1 = D1/D và x2 = D2/D
                       Nếu D=0 và ( D1 #0 hoặc D2#0 ) thì vô nghiệm
                       Nếu D=D1=D2 thì phương trình vô số nghiệm : a11.x1 + a12.x2 =b1
                 + Phương trình bậc 2 ( ax^2+bx+c=0 ) second_degree() :
                       Nhập vào a,b,c
                       Nếu a=0 thì quay về hàm first_degree()
                       Nếu a#0 --> Tính delta
                       Delta < 0 --> Không có nghiêm
                       Delta >0 --> 2 nghiệm phân biệt x1=( -b+sqrt(delta) )/2a ; x2=( -b-sqrt(delta) )/2a
                       Delta =0 --> 1 nghiệm duy nhất x = -b/(2*a)
           - Hàm main : Tạo menu bằng switch để dễ dàng cho việc lựa chọn mỗi hàm tính

Lab1_81 :  Tạo ra một thông báo xác nhận (Yes/No/Cancle) trên màn hình bằng showConfirmDialog
           Sau khi chọn hiển thị một Message thông báo việc chọn Yes và ( No/Cancle )

Lab1_82 :  Chương trình giúp chúng ta làm quen với việc nhập dữ liệu từ bàn phím bằng Scanner
           Sau khi nhập lần lượt từ tên, tuổi, chiều cao. Chương trình sẽ trả về một kết quả
           tổng hợp từ những biến đã nhập.

Lab1_83 :  Chương trình in ra kí tự * dạng tam giác theo số dòng nhập từ bàn phím.
           Nhập vào số dòng a cần in ra.
           Thiết lập vòng for(int i=1; i<=a;i++) để xét từng dòng, lồng vào bên trong
           là hai vòng for để in ra khoảng trắng và in ra số * trên mỗi dòng.
           Với vòng for in ra khoảng trắng for(int j=(a-1);j>=i;j--)
           Với vòng for in ra * thì for (int k=1;k<=(2*i-1);k++)
           Ví dụ nhập vào a = 4 thì tại dòng thứ nhất : Số khoảng trăắng cần in là j=4 --> j>=1 --> 3 khoảng trắng
                                                        Số * cần in là k=1 -->k<=1 --> 1 *
           Tương tự như vậy thì tại dòng thứ hai : Số khoảng trắng cần in là j=4 --> j>=2 --> 2 khoảng trắng
                                                   Số * cần in là k=1 --> k<=3 --> 3 *

Lab1_84 :


Lab1_85 : Yêu cầu nhập vào một mảng số nguyên một chiều, sau đó sắp xếp, tính tổng và tính giá trị trung bình
          - Tạo 4 hàm void ( nhập , hiển thị, sắp xếp, tính toán )
                   + Nhập : sử dụng vòng for để nhập lần lượt từng phần tử vào mảng
                   + Hiển thị : Sử dụng vòng for để in ra từng phần tử
                   + Sắp xếp : Sử dụng phương pháp sắp xếp nổi bột để xếp từ giá trị bé tới lớn
                   + Tính toán : Sử dụng vòng for để cộng từng phần tử vào biến sum, sau đó dùng biến
                                 sum chia cho số phần tử của mảng để được giá trị trung bình.
          - Hàm main : Khai báo biến toàn cục mảng a[] và số phần tử của mảng : n để sử dụng dễ dàng trong việc
                       gọi các hàm void bên trên.

Lab1_86 : Yêu cầu tính tổng của 2 ma trận ( 2 ma trận phải cùng kích thước thì mới cộng được ).
          Nhập vào int a,b ( số hàng, số cột )
          Tạo array1[a][b] để lưu giá trị của ma trận thứ nhất bằng cách dùng mảng 2 chiều để nhập dữ liệu.
                 for ( x = 0 ; x < a ; x++ )
                             for ( y = 0 ; y < b ; y++ )
                                 array1[x][y] = sc.nextInt();
                 2 vòng for này sẽ liên tục tăng giá trị để ta có thể nhập dữ liệu vào ma trận.
          Tương tự với array2.
          Sau khi có được 2 ma trận: ta cộng tổng từng phần tử trong 2 ma trận với nhau ( lại sử dụng 2 vòng for
          như bên trên ) : sum[x][y] = array1[x][y] + array2[x][y];
          Và in ra giá trị sum[x][y].
